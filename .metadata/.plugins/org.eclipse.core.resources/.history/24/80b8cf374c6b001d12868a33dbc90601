package vh.main;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JPanel;

public class GameScreen extends JPanel{
	
	private Random random;
	private BufferedImage map;
	private BufferedImage sprite;
	private long lastFPSTime;
	private int frames;
	
	private ArrayList<BufferedImage> sprites = new ArrayList<>();
	
	private GameRenders gameRenderer;
	
	public GameScreen(BufferedImage map, BufferedImage sprite) {
		gameRenderer = new GameRenders(this);
		this.map = map;
		this.sprite = sprite;
		this.random = new Random();
		
		setPanelSize();
		
		loadSprites();
	}
	
	private void setPanelSize() {
		size = new Dimension(730, 430);
		setMinimumSize(size);
		setPreferredSize(size);
		setMaximumSize(size);
	}

	
	private void loadSprites() {
		
		for (int i = 0 ; i < 14 ; i++)
		{
			for (int j = 0 ; j < 5 ; j++)
			{
				sprites.add(sprite.getSubimage(i*17, j*29, 17, 29));
			}
		}
	}
	
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		g.drawImage(map, 0, 0, null);
		g.drawImage(sprites.get(0), 0, 0, null);
		
//		g.drawImage(sprite.getSubimage(0, 0, 17, 29), 100, 50, null);
		
		for (int i = 0 ; i < 16 ; i++)
		{
			for (int j = 0 ; j < 9; j++)
			{
				g.drawImage(sprites.get(getRX()), i*40, j*40, null);
			}
		}
	}
	
	private int getRX()
	{
		return random.nextInt(14);
	}
	
	private int getRY()
	{
		return random.nextInt(5);
	}
	
	private Color getRColor()
	{
		int r = random.nextInt(256);
		int g = random.nextInt(256);
		int b = random.nextInt(256);
		
		return new Color(r, g, b);
	}
}
