package vh.ui;

import java.awt.Color;
import java.awt.Graphics;

import vh.object.Tower;
import vh.scene.Playing;

public class ButtonBar {
	
	private int x, y, width, height;
	private Playing playing;
	
	private Button[] twrButtons;
	private Tower curTower, dispTower;
	
	public ButtonBar(int x, int y, int w, int h, Playing playing) {
		this.x = x;
		this.y = y;
		this.width = w;
		this.height = h;
		this.playing = playing;
		
		initializeButtons();
	}
	
	private void initializeButtons() {
		twrButtons = new Button[4];
		int width = 60;
		int height = 60;
		int xStart = 120;
		int yStart = 596;
		int xDiff = (int) (width * 1.5f);
		
		for (int i = 0 ; i < twrButtons.length ; i++) {
			twrButtons[i] = new Button("", xStart + (xDiff * i), yStart, width, height, i);
		}
	}

	public void draw(Graphics g) {
		g.setColor(new Color(192, 192, 222));
		g.fillRect(x, y, width, height);
		
		drawButtons(g);
	}
	
	private void drawButtons(Graphics g) {
		for (Button b : twrButtons) {
			g.setColor(new Color(212, 175, 55));
			g.fillRect(b.x, b.y, b.width, b.height);
			g.drawImage(playing.getTowerManager().getTowerImages()[b.getId()], b.x, b.y + 3, b.width, b.height - 6, null);
			drawButtonFb(g, b);
		}
	}
	
	private void drawButtonFb(Graphics g, Button b) {
		if (b.isOver()) {
			g.setColor(Color.WHITE);
		} 
		
		else {
			g.setColor(Color.BLACK);
		}
		
		g.drawRect(b.x, b.y, b.width, b.height);
		
		if (b.isPressed()) {
			g.setColor(Color.WHITE);
			g.drawRect(b.x + 1, b.y + 1, b.width - 2, b.height - 2);
			g.drawRect(b.x + 2, b.y + 2, b.width - 4, b.height - 4);
		}
	}
	
	public void displayTower(Tower t) {
		dispTower = t;
	}

	public void mouseClicked(int x, int y) {
		for (Button b : twrButtons) {
			if (b.getBounds().contains(x, y)) {
				curTower = new Tower(0, 0, -1, b.getId());
				playing.setCurTower(curTower);
				return;
			}
		}
	}

	public void mouseMoved(int x, int y) {
		
		for (Button b : twrButtons) {
			b.setMouseOverButton(false);
		}
		
		for (Button b : twrButtons) {
			if (b.getBounds().contains(x, y)) {
				b.setMouseOverButton(true);
				return;
			}
		}
	}

	public void mousePressed(int x, int y) {
		for (Button b : twrButtons) {
			if (b.getBounds().contains(x, y)) {
				b.setMousePressedButton(true);
				return;
			}
		}
	}

	public void mouseReleased(int x, int y) {
		for (Button b : twrButtons) {
			b.resetMouseState();
		}
	}
}
